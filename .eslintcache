[{"D:\\React\\React Projects\\weather-app\\src\\App.js":"1","D:\\React\\React Projects\\weather-app\\src\\components\\Weather.js":"2","D:\\React\\React Projects\\weather-app\\src\\index.js":"3"},{"size":183,"mtime":1611391687204,"results":"4","hashOfConfig":"5"},{"size":2352,"mtime":1611391684502,"results":"6","hashOfConfig":"5"},{"size":219,"mtime":1611128725711,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uu8y2n",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\React Projects\\weather-app\\src\\App.js",[],"D:\\React\\React Projects\\weather-app\\src\\components\\Weather.js",["15"],"import React, { useState } from \"react\";\r\n\r\nfunction Weather() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState(\"\");\r\n  const [theIcon, setTheIcon] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  // Set Current Date //\r\n  var today = new Date();\r\n  var theDate =\r\n    today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n\r\n  // Weather API Details Object //\r\n  const weatherApi = {\r\n    key: \"e4dd8394eb5644d7df7c1d35d82738df\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n\r\n  // For the weather icon //\r\n  const iconUrl = `https://openweathermap.org/img/wn/${theIcon}@4x.png`;\r\n\r\n  // Search through the API with Query //\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      fetch(\r\n        `${weatherApi.base}weather?q=${query}&units=metric&appid=${weatherApi.key}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setWeather(data);\r\n          if (data.weather != \"undefined\") {\r\n            const { icon } = data.weather[0];\r\n            setTheIcon(icon);\r\n            setDate(theDate);\r\n          } else {\r\n            console.log(e);\r\n          }\r\n          setQuery(\"\");\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='weather'>\r\n        <div className='container'>\r\n          <input\r\n            type='text'\r\n            value={query}\r\n            placeholder='Search..'\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            onKeyPress={search}\r\n          />\r\n          {typeof weather.main != \"undefined\" ? (\r\n            <div className='output card'>\r\n              <div className='grid'>\r\n                <div className='output-details'>\r\n                  <h1 className='temperature'>\r\n                    {Math.round(weather.main.temp)}Â°C\r\n                  </h1>\r\n                  <h3 className='location'>\r\n                    {weather.name}, {weather.sys.country}\r\n                  </h3>\r\n                  <h3>{weather.weather[0].description}</h3>\r\n                  <h3>{date}</h3>\r\n                </div>\r\n                <img src={iconUrl} alt='' />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","D:\\React\\React Projects\\weather-app\\src\\index.js",[],{"ruleId":"16","severity":1,"message":"17","line":32,"column":28,"nodeType":"18","messageId":"19","endLine":32,"endColumn":30},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]